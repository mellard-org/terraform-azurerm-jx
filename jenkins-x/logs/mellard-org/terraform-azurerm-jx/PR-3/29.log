
Showing logs for build [32mmellard-org-terraform-azurerm-j-6hm2f-29[0m stage [32mbuild[0m and container [32mcredential-initializer[0m
{"level":"info","ts":1599551318.9014614,"caller":"creds-init/main.go:44","msg":"Credentials initialized."}

Showing logs for build [32mmellard-org-terraform-azurerm-j-6hm2f-29[0m stage [32mbuild[0m and container [32mworking-dir-initializer[0m

Showing logs for build [32mmellard-org-terraform-azurerm-j-6hm2f-29[0m stage [32mbuild[0m and container [32mplace-tools[0m

Showing logs for build [32mmellard-org-terraform-azurerm-j-6hm2f-29[0m stage [32mbuild[0m and container [32mstep-git-source-mellard-org-terraform-azurerm-j-6hm2f-hfgqg[0m
{"level":"info","ts":1599551332.6578085,"caller":"git/git.go:105","msg":"Successfully cloned https://github.com/mellard-org/terraform-azurerm-**.git @ master in path /workspace/source"}
{"level":"warn","ts":1599551332.6578722,"caller":"git/git.go:152","msg":"Unexpected error: creating symlink: symlink /tekton/home/.ssh /root/.ssh: file exists"}
{"level":"info","ts":1599551332.6985116,"caller":"git/git.go:133","msg":"Successfully initialized and updated submodules in path /workspace/source"}

Showing logs for build [32mmellard-org-terraform-azurerm-j-6hm2f-29[0m stage [32mbuild[0m and container [32mstep-setup-builder-home[0m

Showing logs for build [32mmellard-org-terraform-azurerm-j-6hm2f-29[0m stage [32mbuild[0m and container [32mstep-git-merge[0m
Using SHAs from PULL_REFS=master:36e07b1bdb7f7e71dba6f5fade21c9f938b2d0e6,3:b44b45a83f6faf58fd1420b0832db5a3eeb1ce7f
DEBUG: LC_ALL=C JX_LOG_LEVEL=error git fetch origin --unshallow b44b45a83f6faf58fd1420b0832db5a3eeb1ce7f: 36e07b1bdb7f7e71dba6f5fade21c9f938b2d0e6:
DEBUG: ran git fetch --unshallow origin b44b45a83f6faf58fd1420b0832db5a3eeb1ce7f: 36e07b1bdb7f7e71dba6f5fade21c9f938b2d0e6: in 
DEBUG: LC_ALL=C JX_LOG_LEVEL=error git branch
DEBUG: LC_ALL=C JX_LOG_LEVEL=error git checkout master
DEBUG: ran git checkout master in 
DEBUG: LC_ALL=C JX_LOG_LEVEL=error git reset --hard 36e07b1bdb7f7e71dba6f5fade21c9f938b2d0e6
DEBUG: ran git reset --hard 36e07b1bdb7f7e71dba6f5fade21c9f938b2d0e6 in 
DEBUG: JX_LOG_LEVEL=error LC_ALL=C git clean -fd .
DEBUG: ran clean --force -d . in 
DEBUG: LC_ALL=C JX_LOG_LEVEL=error git merge b44b45a83f6faf58fd1420b0832db5a3eeb1ce7f
DEBUG: ran git merge b44b45a83f6faf58fd1420b0832db5a3eeb1ce7f in 
DEBUG: JX_LOG_LEVEL=error LC_ALL=C git log --format=%H%x1f%an%x1f%ae%x1f%cn%x1f%ce%x1f%s%n%b%x1e 36e07b1bdb7f7e71dba6f5fade21c9f938b2d0e6..HEAD
Merged SHA b44b45a83f6faf58fd1420b0832db5a3eeb1ce7f with commit message 'feat: Add in Key Vault test' into base branch master

Showing logs for build [32mmellard-org-terraform-azurerm-j-6hm2f-29[0m stage [32mbuild[0m and container [32mstep-build-test-commands[0m
GOOS=linux GOARCH=amd64 GO111MODULE=on go build -o build/linux/verify_key_vault ./cmd/verify_key_vault
go: downloading github.com/Azure/go-autorest v14.2.0+incompatible
go: downloading github.com/Azure/azure-sdk-for-go v46.0.0+incompatible
go: extracting github.com/Azure/go-autorest v14.2.0+incompatible
go: downloading github.com/Azure/go-autorest/autorest v0.11.0
go: extracting github.com/Azure/go-autorest/autorest v0.11.0
go: downloading github.com/Azure/go-autorest/logger v0.2.0
go: downloading github.com/Azure/go-autorest/autorest/adal v0.9.2
go: extracting github.com/Azure/go-autorest/logger v0.2.0
go: downloading github.com/Azure/go-autorest/tracing v0.6.0
go: extracting github.com/Azure/go-autorest/autorest/adal v0.9.2
go: downloading golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9
go: downloading github.com/dgrijalva/jwt-go v3.2.0+incompatible
go: downloading github.com/Azure/go-autorest/autorest/date v0.3.0
go: extracting github.com/Azure/go-autorest/tracing v0.6.0
go: extracting github.com/Azure/go-autorest/autorest/date v0.3.0
go: extracting github.com/dgrijalva/jwt-go v3.2.0+incompatible
go: extracting golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9
go: extracting github.com/Azure/azure-sdk-for-go v46.0.0+incompatible
go: downloading github.com/Azure/go-autorest/autorest/validation v0.2.0
go: downloading github.com/Azure/go-autorest/autorest/to v0.3.0
go: extracting github.com/Azure/go-autorest/autorest/to v0.3.0
go: extracting github.com/Azure/go-autorest/autorest/validation v0.2.0
go: finding github.com/Azure/azure-sdk-for-go v46.0.0+incompatible
go: finding github.com/Azure/go-autorest/autorest v0.11.0
go: finding github.com/Azure/go-autorest/autorest/adal v0.9.2
go: finding github.com/Azure/go-autorest/autorest/date v0.3.0
go: finding github.com/Azure/go-autorest/autorest/to v0.3.0
go: finding github.com/Azure/go-autorest/autorest/validation v0.2.0
go: finding github.com/Azure/go-autorest/tracing v0.6.0
go: finding github.com/Azure/go-autorest/logger v0.2.0
go: finding github.com/dgrijalva/jwt-go v3.2.0+incompatible
go: finding golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9
chmod +x build/linux/verify_key_vault

Showing logs for build [32mmellard-org-terraform-azurerm-j-6hm2f-29[0m stage [32mbuild[0m and container [32mstep-build-and-push-image[0m
Error: error resolving dockerfile path: please provide a valid path to a Dockerfile within the build context with --dockerfile
Usage:
  executor [flags]
  executor [command]

Available Commands:
  help        Help about any command
  version     Print the version number of kaniko

Flags:
      --build-arg multi-arg type                  This flag allows you to pass in ARG values at build time. Set it repeatedly for multiple values.
      --cache                                     Use cache when building image
      --cache-dir string                          Specify a local directory to use as a cache. (default "/cache")
      --cache-repo string                         Specify a repository to use as a cache, otherwise one will be inferred from the destination provided
      --cache-ttl duration                        Cache timeout in hours. Defaults to two weeks. (default 336h0m0s)
      --cleanup                                   Clean the filesystem at the end
  -c, --context string                            Path to the dockerfile build context. (default "/workspace/")
      --context-sub-path string                   Sub path within the given context.
  -d, --destination multi-arg type                Registry the final image should be pushed to. Set it repeatedly for multiple destinations. (default )
      --digest-file string                        Specify a file to save the digest of the built image to.
  -f, --dockerfile string                         Path to the dockerfile to be built. (default "Dockerfile")
      --force                                     Force building outside of a container
  -h, --help                                      help for executor
      --image-name-with-digest-file string        Specify a file to save the image name w/ digest of the built image to.
      --insecure                                  Push to insecure registry using plain HTTP
      --insecure-pull                             Pull from insecure registry using plain HTTP
      --insecure-registry multi-arg type          Insecure registry using plain HTTP to push and pull. Set it repeatedly for multiple registries.
      --label multi-arg type                      Set metadata for an image. Set it repeatedly for multiple labels.
      --log-format string                         Log format (text, color, json) (default "color")
      --log-timestamp                             Timestamp in log output
      --no-push                                   Do not push the image to the registry
      --oci-layout-path string                    Path to save the OCI image layout of the built image.
      --registry-certificate key-value-arg type   Use the provided certificate for TLS communication with the given registry. Expected format is 'my.registry.url=/path/to/the/server/certificate'.
      --registry-mirror string                    Registry mirror to use has pull-through cache instead of docker.io.
      --reproducible                              Strip timestamps out of the image to make it reproducible
      --single-snapshot                           Take a single snapshot at the end of the build.
      --skip-tls-verify                           Push to insecure registry ignoring TLS verify
      --skip-tls-verify-pull                      Pull from insecure registry ignoring TLS verify
      --skip-tls-verify-registry multi-arg type   Insecure registry ignoring TLS verify to push and pull. Set it repeatedly for multiple registries.
      --skip-unused-stages                        Build only used stages if defined to true. Otherwise it builds by default all stages, even the unnecessaries ones until it reaches the target stage / end of Dockerfile
      --snapshotMode string                       Change the file attributes inspected during snapshotting (default "full")
      --tarPath string                            Path to save the image in as a tarball instead of pushing
      --target string                             Set the target build stage to build
      --use-new-run                               Experimental run command to detect file system changes. This new run command does no rely on snapshotting to detect changes.
  -v, --verbosity string                          Log level (trace, debug, info, warn, error, fatal, panic) (default "info")
      --whitelist-var-run                         Ignore /var/run directory when taking image snapshot. Set it to false to preserve /var/run/ in destination image. (Default true). (default true)

Use "executor [command] --help" for more information about a command.

[31m
Pipeline failed on stage 'build' : container 'step-build-and-push-image'. The execution of the pipeline has stopped.[0m
