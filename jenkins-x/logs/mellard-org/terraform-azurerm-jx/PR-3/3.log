
Showing logs for build [32mmellard-org-terraform-azurerm-j-fskfx-3[0m stage [32mbuild[0m and container [32mcredential-initializer[0m
{"level":"info","ts":1599391000.2823212,"caller":"creds-init/main.go:44","msg":"Credentials initialized."}

Showing logs for build [32mmellard-org-terraform-azurerm-j-fskfx-3[0m stage [32mbuild[0m and container [32mworking-dir-initializer[0m

Showing logs for build [32mmellard-org-terraform-azurerm-j-fskfx-3[0m stage [32mbuild[0m and container [32mplace-tools[0m

Showing logs for build [32mmellard-org-terraform-azurerm-j-fskfx-3[0m stage [32mbuild[0m and container [32mstep-git-source-mellard-org-terraform-azurerm-j-fskfx-wg5dr[0m
{"level":"info","ts":1599391027.0323174,"caller":"git/git.go:105","msg":"Successfully cloned https://github.com/mellard-org/terraform-azurerm-**.git @ master in path /workspace/source"}
{"level":"warn","ts":1599391027.0324755,"caller":"git/git.go:152","msg":"Unexpected error: creating symlink: symlink /tekton/home/.ssh /root/.ssh: file exists"}
{"level":"info","ts":1599391027.0734398,"caller":"git/git.go:133","msg":"Successfully initialized and updated submodules in path /workspace/source"}

Showing logs for build [32mmellard-org-terraform-azurerm-j-fskfx-3[0m stage [32mbuild[0m and container [32mstep-setup-builder-home[0m

Showing logs for build [32mmellard-org-terraform-azurerm-j-fskfx-3[0m stage [32mbuild[0m and container [32mstep-git-merge[0m
Using SHAs from PULL_REFS=master:97664f2c734221b944c40df5caa2cfd343abe03a,3:6294dea061ab4d366a54e0d2d838125e8f0f14a3
DEBUG: LC_ALL=C JX_LOG_LEVEL=error git fetch origin --unshallow 6294dea061ab4d366a54e0d2d838125e8f0f14a3: 97664f2c734221b944c40df5caa2cfd343abe03a:
DEBUG: ran git fetch --unshallow origin 6294dea061ab4d366a54e0d2d838125e8f0f14a3: 97664f2c734221b944c40df5caa2cfd343abe03a: in 
DEBUG: LC_ALL=C JX_LOG_LEVEL=error git branch
DEBUG: LC_ALL=C JX_LOG_LEVEL=error git checkout master
DEBUG: ran git checkout master in 
DEBUG: LC_ALL=C JX_LOG_LEVEL=error git reset --hard 97664f2c734221b944c40df5caa2cfd343abe03a
DEBUG: ran git reset --hard 97664f2c734221b944c40df5caa2cfd343abe03a in 
DEBUG: LC_ALL=C JX_LOG_LEVEL=error git clean -fd .
DEBUG: ran clean --force -d . in 
DEBUG: LC_ALL=C JX_LOG_LEVEL=error git merge 6294dea061ab4d366a54e0d2d838125e8f0f14a3
DEBUG: ran git merge 6294dea061ab4d366a54e0d2d838125e8f0f14a3 in 
DEBUG: LC_ALL=C JX_LOG_LEVEL=error git log --format=%H%x1f%an%x1f%ae%x1f%cn%x1f%ce%x1f%s%n%b%x1e 97664f2c734221b944c40df5caa2cfd343abe03a..HEAD
Merged SHA 6294dea061ab4d366a54e0d2d838125e8f0f14a3 with commit message 'feat: Add in Key Vault test' into base branch master

Showing logs for build [32mmellard-org-terraform-azurerm-j-fskfx-3[0m stage [32mbuild[0m and container [32mstep-build-test-commands[0m
GOOS=linux GOARCH=amd64 GO111MODULE=on go build -o build/linux/verify_key_vault ./cmd/verify_key_vault
go: downloading github.com/Azure/go-autorest v14.2.0+incompatible
go: downloading github.com/Azure/azure-sdk-for-go v46.0.0+incompatible
go: extracting github.com/Azure/go-autorest v14.2.0+incompatible
go: downloading github.com/Azure/go-autorest/autorest v0.11.0
go: extracting github.com/Azure/go-autorest/autorest v0.11.0
go: downloading github.com/Azure/go-autorest/autorest/adal v0.9.2
go: downloading github.com/Azure/go-autorest/logger v0.2.0
go: extracting github.com/Azure/go-autorest/logger v0.2.0
go: downloading github.com/Azure/go-autorest/tracing v0.6.0
go: extracting github.com/Azure/go-autorest/autorest/adal v0.9.2
go: downloading github.com/dgrijalva/jwt-go v3.2.0+incompatible
go: downloading golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9
go: extracting github.com/Azure/go-autorest/tracing v0.6.0
go: extracting github.com/dgrijalva/jwt-go v3.2.0+incompatible
go: downloading github.com/Azure/go-autorest/autorest/date v0.3.0
go: extracting github.com/Azure/go-autorest/autorest/date v0.3.0
go: extracting golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9
go: extracting github.com/Azure/azure-sdk-for-go v46.0.0+incompatible
go: downloading github.com/Azure/go-autorest/autorest/validation v0.2.0
go: downloading github.com/Azure/go-autorest/autorest/to v0.3.0
go: extracting github.com/Azure/go-autorest/autorest/to v0.3.0
go: extracting github.com/Azure/go-autorest/autorest/validation v0.2.0
go: finding github.com/Azure/azure-sdk-for-go v46.0.0+incompatible
go: finding github.com/Azure/go-autorest/autorest v0.11.0
go: finding github.com/Azure/go-autorest/autorest/adal v0.9.2
go: finding github.com/Azure/go-autorest/autorest/date v0.3.0
go: finding github.com/Azure/go-autorest/autorest/to v0.3.0
go: finding github.com/Azure/go-autorest/autorest/validation v0.2.0
go: finding github.com/Azure/go-autorest/tracing v0.6.0
go: finding github.com/Azure/go-autorest/logger v0.2.0
go: finding github.com/dgrijalva/jwt-go v3.2.0+incompatible
go: finding golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9
chmod +x build/linux/verify_key_vault

Showing logs for build [32mmellard-org-terraform-azurerm-j-fskfx-3[0m stage [32mbuild[0m and container [32mstep-build-and-push-image[0m
Error: error resolving dockerfile path: please provide a valid path to a Dockerfile within the build context with --dockerfile
Usage:
  executor [flags]

Flags:
      --build-arg multi-arg type                  This flag allows you to pass in ARG values at build time. Set it repeatedly for multiple values.
      --cache                                     Use cache when building image
      --cache-dir string                          Specify a local directory to use as a cache. (default "/cache")
      --cache-repo string                         Specify a repository to use as a cache, otherwise one will be inferred from the destination provided
      --cache-ttl duration                        Cache timeout in hours. Defaults to two weeks. (default 336h0m0s)
      --cleanup                                   Clean the filesystem at the end
  -c, --context string                            Path to the dockerfile build context. (default "/workspace/")
  -d, --destination multi-arg type                Registry the final image should be pushed to. Set it repeatedly for multiple destinations. (default )
  -f, --dockerfile string                         Path to the dockerfile to be built. (default "Dockerfile")
      --force                                     Force building outside of a container
  -h, --help                                      help for executor
      --insecure                                  Push to insecure registry using plain HTTP
      --insecure-pull                             Pull from insecure registry using plain HTTP
      --insecure-registry multi-arg type          Insecure registry using plain HTTP to push and pull. Set it repeatedly for multiple registries.
      --no-push                                   Do not push the image to the registry
      --reproducible                              Strip timestamps out of the image to make it reproducible
      --single-snapshot                           Take a single snapshot at the end of the build.
      --skip-tls-verify                           Push to insecure registry ignoring TLS verify
      --skip-tls-verify-pull                      Pull from insecure registry ignoring TLS verify
      --skip-tls-verify-registry multi-arg type   Insecure registry ignoring TLS verify to push and pull. Set it repeatedly for multiple registries.
      --snapshotMode string                       Change the file attributes inspected during snapshotting (default "full")
      --tarPath string                            Path to save the image in as a tarball instead of pushing
      --target string                             Set the target build stage to build
  -v, --verbosity string                          Log level (debug, info, warn, error, fatal, panic (default "info")

[31m
Pipeline failed on stage 'build' : container 'step-build-and-push-image'. The execution of the pipeline has stopped.[0m
